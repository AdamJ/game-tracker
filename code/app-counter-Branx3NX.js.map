{"version":3,"file":"app-counter-Branx3NX.js","sources":["../../src/styles/mana-styles.ts","../../src/components/match-tracker/match-tracker.ts","../../src/components/fab.ts","../../src/pages/app-counter/app-counter.ts"],"sourcesContent":["import { css } from 'lit';\n\nexport const manaStyles = css`\n.ms {\n  position: relative;\n}\n.ms-small::after {\n  top: -2px !important;\n}\n.ms-2x {\n  font-size: 1.75em;\n}\n.ms-3x {\n  font-size: 2.25em;\n}\n.ms-4x {\n  font-size: 3em;\n}\n.ms-5x {\n  font-size: 3.75em;\n}\n.ms-6x {\n  font-size: 4.5em;\n}\n.ms-loyalty-up,\n.ms-loyalty-down,\n.ms-saga-1,\n.ms-saga-2,\n.ms-saga-3,\n.ms-saga-4 {\n  position: relative;\n  text-align: center;\n}\n.ms-loyalty-down.ms-4x,\n.ms-loyalty-up.ms-4x {\n  top: -5px;\n}\n.ms-loyalty-down::after,\n.ms-loyalty-up::after,\n.ms-saga-1::after,\n.ms-saga-2::after,\n.ms-saga-3::after,\n.ms-saga-4::after {\n  color:  var(--special-color-white);\n  display: inline-block;\n  font-size: 0.5em;\n  font-family: var(--sl-font-sans);\n  position: absolute;\n  line-height: 2.25em;\n  width: 100%;\n}\n.ms-saga-1::after,\n.ms-saga-2::after,\n.ms-saga-3::after,\n.ms-saga-4::after {\n  top: -5px;\n  left: 0;\n}\n.ms-loyalty-down::after {\n  line-height: 2em;\n}\n.ms-loyalty-down::after {\n  content: \"-\";\n  top: -1px;\n  left: 1px;\n}\n.ms-loyalty-up::after {\n  content: \"+\";\n  top: -1px;\n  left: 1px;\n}\n.ms-saga-4::after {\n  content: \"4\";\n}\n.ms-saga-3::after {\n  content: \"3\";\n}\n.ms-saga-2::after {\n  content: \"2\";\n}\n.ms-saga-1::after {\n  content: \"1\";\n}\n.ms-g .ms-cost {\n  background-color: var(--ms-mana-g-bg);\n}\n.ms-u .ms-cost {\n  background-color: var(--ms-mana-u-bg);\n}\n.ms-w .ms-cost {\n  background-color: var(--ms-mana-w-bg);\n}\n.ms-r .ms-cost {\n  background-color: var(--ms-mana-r-bg);\n}\n.ms-b .ms-cost {\n  background-color: var(--ms-mana-b-bg);\n}\n.ms-c .ms-cost {\n  background-color: var(--ms-mana-c-bg);\n}\n`;\n","import { LitElement, html, css, nothing } from 'lit';\nimport { customElement, property, state, query } from 'lit/decorators.js';\nimport localForage from 'localforage';\nimport '../icons/mana-icon';\nimport '../icons/mtg-symbols';\nimport '@shoelace-style/shoelace/dist/components/button/button.js';\nimport '@shoelace-style/shoelace/dist/components/card/card.js';\n\nimport { sharedStyles } from '../../styles/shared-styles';\nimport { shoelaceStyles } from '../../styles/shoelace-styles';\nimport { counterStyles } from '../../pages/app-counter/counter-styles';\nimport { tableStyles } from '../../styles/table-styles';\nimport { manaStyles } from '../../styles/mana-styles';\n\ninterface Player {\n  life: number;\n}\n\ninterface Game {\n  player1: string;\n  player2: string;\n  player3: string;\n  player4: string;\n  result: 'win' | 'loss' | 'draw';\n  winner: string | \"draw\" | null;\n}\n\ninterface MatchResult {\n  player1Handle: string;\n  player2Handle: string;\n  player3Handle: string;\n  player4Handle: string;\n  player1LifeTracker: number;\n  player2LifeTracker: number;\n  player3LifeTracker: number;\n  player4LifeTracker: number;\n  player1Outcome: 'win' | 'loss' | 'draw';\n  player2Outcome: 'win' | 'loss' | 'draw';\n  player3Outcome: 'win' | 'loss' | 'draw';\n  player4Outcome: 'win' | 'loss' | 'draw';\n}\n\ninterface LogEntry {\n  player: string;\n  action: string;\n  life: number;\n}\n\n@customElement('match-tracker')\nexport class MatchTracker extends LitElement {\n  @property({ type: Object }) handle1: Player = { life: 40 };\n  @property({ type: Object }) handle2: Player = { life: 40 };\n  @property({ type: Object }) handle3: Player = { life: 40 };\n  @property({ type: Object }) handle4: Player = { life: 40 };\n\n  @state() activeTab: string = 'standings'; // Initial active tab\n  @state() matchResults: MatchResult[] = []; // Array to store game results\n  @state() playerHandle1: string = \"Player 1\";\n  @state() playerHandle2: string = \"Player 2\";\n  @state() playerHandle3: string = \"Player 3\";\n  @state() playerHandle4: string = \"Player 4\";\n  @state() initialLifeTracker: number = 40;\n  @state() isAlertOpen = false; //Add a state to track if the drawer is open.\n\n  @query('.alert-closable') alert: any; // Query for the drawer element\n\n  private storageKey = 'playerData'; // Key for localForage\n\n  @property({ type: Array }) gameHistory: Game[] = [];\n\n  constructor() {\n    super();\n    this.loadFromStorage(); // Load data when component initializes\n  }\n\n  firstUpdated() { // Called after the first render\n      this.saveToStorage(); // Save initial data to storage.\n  }\n\n  static styles = [\n    sharedStyles,\n    shoelaceStyles,\n    tableStyles,\n    counterStyles,\n    manaStyles,\n    css`\n      sl-input::part(form-control-help-text) {\n        color: var(--sl-color-neutral-700);\n      }\n      .form-2-column {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n      }\n      .form-player-input {\n        width: 100%;\n        margin-right: 1rem;\n        margin-left: 1rem;\n      }\n      @media (min-width: 900px) {\n        .form-2-column {\n          flex-direction: row;\n        }\n      }\n      @media (max-width: 900px) {\n        .form-player-input {\n          margin-right: 0;\n          margin-left: 0;\n        }\n      }\n    `\n  ]\n  @state() playerLogs: LogEntry[] = [];\n\n  @state() playerHandle1Actions: string[] = []; // Array to store Player 1's actions\n  @state() playerHandle2Actions: string[] = []; // Array to store Player 2's actions\n  @state() playerHandle3Actions: string[] = []; // Array to store Player 3's actions\n  @state() playerHandle4Actions: string[] = []; // Array to store Player 4's actions\n\n  setActiveTab(tabName: string) {\n    this.activeTab = tabName;\n  }\n\n  private updateLife(player: 1 | 2 | 3 | 4, change: number, action: 'Gain' | 'Lose') {\n    // Define a map to quickly access player data\n    const playerMap = {\n      1: { handle: this.handle1, playerHandle: this.playerHandle1, setter: (value: Player) => { this.handle1 = value; } },\n      2: { handle: this.handle2, playerHandle: this.playerHandle2, setter: (value: Player) => { this.handle2 = value; } },\n      3: { handle: this.handle3, playerHandle: this.playerHandle3, setter: (value: Player) => { this.handle3 = value; } },\n      4: { handle: this.handle4, playerHandle: this.playerHandle4, setter: (value: Player) => { this.handle4 = value; } },\n    };\n\n    const playerData = playerMap[player];\n\n    if (playerData) {\n        // Update the life total, ensuring it doesn't go below 0\n        const newLife = Math.max(0, playerData.handle.life + change);\n\n        // Update the player state\n        playerData.setter({...playerData.handle, life: newLife});\n\n        // Log the action\n        console.log(`${action} ${Math.abs(change)} to ${newLife} for ${playerData.playerHandle}`);\n\n        // Record the action\n        // playerData.actions = [...playerData.actions, `${action} ${Math.abs(change)} to ${newLife}`];\n        this.playerLogs = [...this.playerLogs, { player: playerData.playerHandle, action: `${action}`, life: newLife }];\n\n        //Update the main storage\n        this.saveToStorage();\n    }\n  }\n\n  private getPlayerIconVariant(game: LogEntry): string | undefined {\n    if (game.action.includes(\"Lose\")) {\n      return 'loyalty-down';\n    } else if (game.action.includes(\"Gain\")) {\n      return 'loyalty-up';\n    } else {\n      return undefined;\n    }\n  }\n  private getPlayerBadgeVariant(game: LogEntry): string | undefined {\n    if (game.action.includes(\"Lose\")) {\n      return 'danger';\n    } else if (game.action.includes(\"Gain\")) {\n      return 'success';\n    } else {\n      return undefined;\n    }\n  }\n\n  private setInitialLifeTracker(event: CustomEvent) {\n    const input = event.target as HTMLInputElement;\n    const newLife = parseInt(input.value, 10);\n\n    if (!isNaN(newLife) && newLife >= 0) {\n      this.initialLifeTracker = newLife;\n      this.handle1 = { life: newLife };\n      this.handle2 = { life: newLife };\n      this.handle3 = { life: newLife };\n      this.handle4 = { life: newLife };\n      this.saveToStorage(); // Save after initial life change\n    } else {\n      alert(\"Please enter a valid positive number for starting life.\");\n      input.value = this.initialLifeTracker.toString();\n    }\n  }\n\n  private handlePlayerHandleChange(player: 1 | 2 | 3 | 4, event: CustomEvent) {\n    const playerMap = {\n      1: { name: \"Player 1\", setter: (value: string) => { this.playerHandle1 = value; } },\n      2: { name: \"Player 2\", setter: (value: string) => { this.playerHandle2 = value; } },\n      3: { name: \"Player 3\", setter: (value: string) => { this.playerHandle3 = value; } },\n      4: { name: \"Player 4\", setter: (value: string) => { this.playerHandle4 = value; } },\n    };\n\n    const playerData = playerMap[player];\n\n    if (playerData) {\n      const newName = (event.target as HTMLInputElement).value || playerData.name;\n      playerData.setter(newName);\n      this.saveToStorage();\n    }\n  }\n\n  private recordResult(winner: 1 | 2 | 3 | 4 | 'draw') {\n    let player1Outcome: 'win' | 'loss' | 'draw' = 'loss';\n    let player2Outcome: 'win' | 'loss' | 'draw' = 'loss';\n    let player3Outcome: 'win' | 'loss' | 'draw' = 'loss';\n    let player4Outcome: 'win' | 'loss' | 'draw' = 'loss';\n\n    if (winner === 1) {\n      player1Outcome = 'win';\n      player2Outcome = 'loss';\n      player3Outcome = 'loss';\n      player4Outcome = 'loss';\n    } else if (winner === 2) {\n      player1Outcome = 'loss';\n      player2Outcome = 'win';\n      player3Outcome = 'loss';\n      player4Outcome = 'loss';\n    } else if (winner === 3) {\n      player1Outcome = 'loss';\n      player2Outcome = 'loss';\n      player3Outcome = 'win';\n      player4Outcome = 'loss';\n    } else if (winner === 4) {\n      player1Outcome = 'loss';\n      player2Outcome = 'loss';\n      player3Outcome = 'loss';\n      player4Outcome = 'win';\n    } else if (winner === 'draw') {\n      player1Outcome = 'draw';\n      player2Outcome = 'draw';\n      player3Outcome = 'draw';\n      player4Outcome = 'draw';\n    }\n\n    const newResult: MatchResult = {\n      player1Handle: this.playerHandle1,\n      player2Handle: this.playerHandle2,\n      player3Handle: this.playerHandle3,\n      player4Handle: this.playerHandle4,\n      player1LifeTracker: this.handle1.life,\n      player2LifeTracker: this.handle2.life,\n      player3LifeTracker: this.handle3.life,\n      player4LifeTracker: this.handle4.life,\n      player1Outcome,\n      player2Outcome,\n      player3Outcome,\n      player4Outcome,\n    };\n\n    this.matchResults = [...this.matchResults, newResult];\n    this.saveToStorage();\n    this.resetLife(); // Reset the game for a new round\n  }\n\n  private closeAlert(){\n    this.isAlertOpen = false;\n  }\n  private resetWithAlert(){\n    this.resetGame();\n    this.isAlertOpen = true;\n  }\n\n  private resetGame() {\n      this.handle1 = { life: this.initialLifeTracker };\n      this.handle2 = { life: this.initialLifeTracker };\n      this.handle3 = { life: this.initialLifeTracker };\n      this.handle4 = { life: this.initialLifeTracker };\n      this.playerLogs = [];\n      this.playerHandle1 = \"Player 1\";\n      this.playerHandle2 = \"Player 2\";\n      this.playerHandle3 = \"Player 3\";\n      this.playerHandle4 = \"Player 4\";\n      this.matchResults = [];\n  }\n  private resetLife() {\n      this.handle1 = { life: this.initialLifeTracker };\n      this.handle2 = { life: this.initialLifeTracker };\n      this.handle3 = { life: this.initialLifeTracker };\n      this.handle4 = { life: this.initialLifeTracker };\n      this.playerLogs = [];\n  }\n\n  private saveToStorage() {\n    const data = {\n      initialLifeTracker: this.initialLifeTracker,\n      matchResults: this.matchResults,\n      handle1: this.handle1,\n      handle2: this.handle2,\n      handle3: this.handle3,\n      handle4: this.handle4,\n      playerHandle1: this.playerHandle1,\n      playerHandle2: this.playerHandle2,\n      playerHandle3: this.playerHandle3,\n      playerHandle4: this.playerHandle4,\n      playerLogs: this.playerLogs,\n    };\n    localForage.setItem(this.storageKey, data).catch(console.error);\n  }\n\n  private loadFromStorage() {\n    localForage.getItem(this.storageKey).then((data: any) => {\n      if (data) {\n        this.initialLifeTracker = data.initialLifeTracker || 20;\n        this.matchResults = data.matchResults || [];\n        this.handle1 = data.handle1 || { life: 20 };\n        this.handle2 = data.handle2 || { life: 20 };\n        this.handle3 = data.handle3 || { life: 20 };\n        this.handle4 = data.handle4 || { life: 20 };\n        this.playerHandle1 = data.playerHandle1 || \"Player 1\";\n        this.playerHandle2 = data.playerHandle2 || \"Player 2\";\n        this.playerHandle3 = data.playerHandle3 || \"Player 3\";\n        this.playerHandle4 = data.playerHandle4 || \"Player 4\";\n        this.playerHandle1Actions = data.playerHandle1Actions || [];\n        this.playerHandle2Actions = data.playerHandle2Actions || [];\n        this.playerHandle3Actions = data.playerHandle3Actions || [];\n        this.playerHandle4Actions = data.playerHandle4Actions || [];\n        this.playerLogs = data.playerLogs;\n      }\n    }).catch(console.error);\n  }\n\n  private getPlayerStats(playerHandle: string) {\n    const playerResults = this.matchResults.filter(\n      (result) => result.player1Handle === playerHandle || result.player2Handle === playerHandle || result.player3Handle === playerHandle || result.player4Handle === playerHandle\n    );\n\n    const wins = playerResults.filter(\n      (result) =>\n        (result.player1Handle === playerHandle && result.player1Outcome === 'win') ||\n        (result.player2Handle === playerHandle && result.player2Outcome === 'win') ||\n        (result.player3Handle === playerHandle && result.player3Outcome === 'win') ||\n        (result.player4Handle === playerHandle && result.player4Outcome === 'win')\n    ).length;\n\n    const losses = playerResults.filter(\n      (result) =>\n        (result.player1Handle === playerHandle && result.player1Outcome === 'loss') ||\n        (result.player2Handle === playerHandle && result.player2Outcome === 'loss') ||\n        (result.player3Handle === playerHandle && result.player3Outcome === 'loss') ||\n        (result.player4Handle === playerHandle && result.player4Outcome === 'loss')\n    ).length;\n\n    const draws = playerResults.filter(\n      (result) =>\n        (result.player1Handle === playerHandle && result.player1Outcome === 'draw') ||\n        (result.player2Handle === playerHandle && result.player2Outcome === 'draw') ||\n        (result.player3Handle === playerHandle && result.player3Outcome === 'draw') ||\n        (result.player4Handle === playerHandle && result.player4Outcome === 'draw')\n    ).length;\n\n    return { wins, losses, draws };\n  }\n\n  private exportToCSV() {\n    const csvContent = \"data:text/csv;charset=utf-8,\" + this.convertArrayOfObjectsToCSV(this.matchResults);\n\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"game_results.csv\"); // Set the filename\n    document.body.appendChild(link); // Required for FF\n    link.click(); // Simulate click to download\n    document.body.removeChild(link); // Clean up\n  }\n\n  private convertArrayOfObjectsToCSV(arr: any[]) {\n    if (!arr || arr.length === 0) {\n      return \"\";\n    }\n\n    const header = Object.keys(arr[0]).join(\",\"); // Get header from keys\n    const rows = arr.map(obj => {\n      return Object.values(obj).map(value => `\"${value}\"`).join(\",\"); // Escape values with quotes\n    }).join(\"\\n\");\n\n    return header + \"\\n\" + rows;\n  }\n\n  render() {\n    // Clear previous log items\n    const playerLogItems = new Map<string, string[]>();\n\n    this.playerLogs.forEach(log => {\n        if (!playerLogItems.has(log.player)) {\n            playerLogItems.set(log.player, []);\n        }\n        const iconName = this.getPlayerIconVariant(log);\n        const badgeName = this.getPlayerBadgeVariant(log);\n        const logItem = html`\n          <sl-menu-item>\n            ${iconName ? html`<sl-icon slot=\"prefix\" library=\"mana\" name=${String(iconName)}></sl-icon>` : nothing}\n            ${log.action}\n            ${badgeName ? html`<sl-badge variant=${String(badgeName)} pill>1</sl-badge>` : nothing} life to <sl-badge variant=\"neutral\">${log.life}</sl-badge>\n          </sl-menu-item>\n        `;\n        // @ts-ignore\n        playerLogItems.get(log.player)?.push(logItem);\n    });\n\n    // Render menu items for each player\n    const playerMenuItems = [];\n    for (const [player, logs] of playerLogItems) {\n        playerMenuItems.push(html`\n           <sl-menu-label>${player}</sl-menu-label>\n           ${logs.map(log => html`\n            ${log}\n           `)}\n        `);\n    }\n    // Empty state logic\n    const emptyState = html`\n      <sl-menu-item disabled>\n        <sl-icon slot=\"prefix\" name=\"info-circle\"></sl-icon>\n        No match information to display.\n      </sl-menu-item>\n    `;\n\n    const menuContent = playerMenuItems.length > 0 ? playerMenuItems : emptyState;\n\n    return html`\n      <main>\n        <div style=\"display: flex; flex-direction: column; grid-gap: 1rem;\">\n          <sl-tab-group active-tab=${this.activeTab}>\n            <sl-tab slot=\"nav\" panel=\"tracker\" class=\"ios-tab\">Life</sl-tab>\n            <sl-tab slot=\"nav\" panel=\"results\" class=\"ios-tab\">Results</sl-tab>\n            <sl-tab slot=\"nav\" panel=\"standings\" class=\"ios-tab\">Standings</sl-tab>\n            <sl-tab slot=\"nav\" panel=\"action-log\" class=\"ios-tab\">Match Log</sl-tab>\n            <sl-tab slot=\"nav\" panel=\"setup\" class=\"ios-tab\">Setup</sl-tab>\n            <sl-tab-panel name=\"tracker\">\n              <div style=\"display: flex; flex-direction: row;justify-content: around; flex-wrap: wrap;\">\n                <div style=\"width: 50%;\">\n                  <sl-card class=\"player-one\" id=\"topLeft\">\n                    <form style=\"position: relative; height: 100%; justify-content: space-between;\">\n                      <sl-button variant=\"default\" size=\"large\" class=\"life-counter player-one\" @click=${() => this.updateLife(1, 1, 'Gain')}>\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"loyalty-up\" class=\"ms ms-loyalty-up ms-2x\"></sl-icon>\n                        Gain\n                      </sl-button>\n                      <div>\n                        <p class=\"text-center ms-4x\" style=\"line-height: normal; margin: 0;\">\n                          ${this.handle1.life}\n                        </p>\n                        <p class=\"text-center\" style=\"margin:0; padding:0;\">\n                          ${this.playerHandle1}\n                        </p>\n                      </div>\n                      <sl-button variant=\"default\" size=\"large\" class=\"life-counter player-one\" @click=${() => this.updateLife(1, -1, 'Lose')}>\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"loyalty-down\" class=\"ms ms-loyalty-down ms-2x\"></sl-icon>\n                        Lose\n                      </sl-button>\n                      <span class=\"hide-at-800\" style=\"position: absolute; right: 8px; bottom: 8px;\">\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"saga\" class=\"ms ms-saga-1 ms-4x\"></sl-icon>\n                      </span>\n                    </form>\n                  </sl-card>\n                  <sl-card class=\"player-three\" id=\"topRight\">\n                    <form style=\"position: relative; height: 100%; justify-content: space-between;\">\n                      <sl-button variant=\"default\" size=\"large\" class=\"life-counter player-three\" @click=${() => this.updateLife(3, 1, 'Gain')}>\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"loyalty-up\" class=\"ms ms-loyalty-up ms-2x\"></sl-icon>\n                        Gain\n                      </sl-button>\n                      <div>\n                        <p class=\"text-center ms-4x\" style=\"line-height: normal; margin: 0;\">\n                          ${this.handle3.life}\n                        </p>\n                        <p class=\"text-center\" style=\"margin:0; padding:0;\">\n                          ${this.playerHandle3}\n                        </p>\n                      </div>\n                      <sl-button variant=\"default\" size=\"large\" class=\"life-counter player-three\" @click=${() => this.updateLife(3, -1, 'Lose')}>\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"loyalty-down\" class=\"ms ms-loyalty-down ms-2x\"></sl-icon>\n                        Lose\n                      </sl-button>\n                      <span class=\"hide-at-800\" style=\"position: absolute; right: 8px; top: 8px;\">\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"saga\" class=\"ms ms-saga-3 ms-4x\"></sl-icon>\n                      </span>\n                    </form>\n                  </sl-card>\n                </div>\n                <div style=\"width: 50%;\">\n                  <sl-card class=\"player-two\" id=\"bottomLeft\">\n                    <form style=\"position: relative; height: 100%; justify-content: space-between;\">\n                      <sl-button variant=\"default\" size=\"large\" class=\"life-counter player-two\" @click=${() => this.updateLife(2, 1, 'Gain')}>\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"loyalty-up\" class=\"ms ms-loyalty-up ms-2x\"></sl-icon>\n                        Gain\n                      </sl-button>\n                      <div>\n                        <p class=\"text-center ms-4x\" style=\"line-height: normal; margin: 0;\">\n                          ${this.handle2.life}\n                        </p>\n                        <p class=\"text-center\" style=\"margin:0; padding:0;\">\n                          ${this.playerHandle2}\n                        </p>\n                      </div>\n                      <sl-button variant=\"default\" size=\"large\" class=\"life-counter player-two\" @click=${() => this.updateLife(2, -1, 'Lose')}>\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"loyalty-down\" class=\"ms ms-loyalty-down ms-2x\"></sl-icon>\n                        Lose\n                      </sl-button>\n                      <span class=\"hide-at-800\" style=\"position: absolute; left: 8px; bottom: 8px;\">\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"saga\" class=\"ms ms-saga-2 ms-4x\"></sl-icon>\n                      </span>\n                    </form>\n                  </sl-card>\n                  <sl-card class=\"player-four\" id=\"bottomRight\">\n                    <form style=\"position: relative; height: 100%; justify-content: space-between;\">\n                      <sl-button variant=\"default\" size=\"large\" class=\"life-counter player-four\" @click=${() => this.updateLife(4, 1, 'Gain')}>\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"loyalty-up\" class=\"ms ms-loyalty-up ms-2x\"></sl-icon>\n                        Gain\n                      </sl-button>\n                      <div>\n                        <p class=\"text-center ms-4x\" style=\"line-height: normal; margin: 0;\">\n                          ${this.handle4.life}\n                        </p>\n                        <p class=\"text-center\" style=\"margin:0; padding:0;\">\n                          ${this.playerHandle4}\n                        </p>\n                      </div>\n                      <sl-button variant=\"default\" outline size=\"large\" class=\"life-counter player-four\" @click=${() => this.updateLife(4, -1, 'Lose')}>\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"loyalty-down\" class=\"ms ms-loyalty-down ms-2x\"></sl-icon>\n                        Lose\n                      </sl-button>\n                      <span class=\"hide-at-800\" style=\"position: absolute; left: 8px; top: 8px;\">\n                        <sl-icon library=\"mana\" slot=\"prefix\" name=\"saga\" class=\"ms ms-saga-4 ms-4x\"></sl-icon>\n                      </span>\n                    </form>\n                  </sl-card>\n                </div>\n                <style>\n                sl-button.life-counter::part(base) {\n                  height: 4rem;\n                  justify-content: center;\n                  line-height: 4rem;\n                }\n                </style>\n              </div>\n            </sl-tab-panel>\n            <sl-tab-panel name=\"standings\">\n              <table class=\"border table-striped\">\n                <thead>\n                  <tr>\n                    <th>Player</th>\n                    <th>Wins</th>\n                    <th>Losses</th>\n                    <th>Draws</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>${this.playerHandle1}</td>\n                    <td>${this.getPlayerStats(this.playerHandle1).wins}</td>\n                    <td>${this.getPlayerStats(this.playerHandle1).losses}</td>\n                    <td>${this.getPlayerStats(this.playerHandle1).draws}</td>\n                  </tr>\n                  <tr>\n                    <td>${this.playerHandle2}</td>\n                    <td>${this.getPlayerStats(this.playerHandle2).wins}</td>\n                    <td>${this.getPlayerStats(this.playerHandle2).losses}</td>\n                    <td>${this.getPlayerStats(this.playerHandle2).draws}</td>\n                  </tr>\n                  <tr>\n                    <td>${this.playerHandle3}</td>\n                    <td>${this.getPlayerStats(this.playerHandle3).wins}</td>\n                    <td>${this.getPlayerStats(this.playerHandle3).losses}</td>\n                    <td>${this.getPlayerStats(this.playerHandle3).draws}</td>\n                  </tr>\n                  <tr>\n                    <td>${this.playerHandle4}</td>\n                    <td>${this.getPlayerStats(this.playerHandle4).wins}</td>\n                    <td>${this.getPlayerStats(this.playerHandle4).losses}</td>\n                    <td>${this.getPlayerStats(this.playerHandle4).draws}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </sl-tab-panel>\n            <sl-tab-panel name=\"setup\">\n              <sl-alert variant=\"primary\" open duration=\"1500\" closable class=\"alert-closable\" ?open=${this.isAlertOpen} @sl-after-hide=${this.closeAlert}>\n                <sl-icon slot=\"icon\" name=\"info-circle\"></sl-icon>\n                Resetting game data.\n              </sl-alert>\n              <div style=\"display: flex; flex-direction: row; justify-content: center; margin-bottom: .5rem;\">\n                <sl-input\n                  type=\"number\"\n                  label=\"Starting Life\"\n                  size=\"medium\"\n                  pill\n                  help-text=\"Enter a number greater than 0\"\n                  type=\"number\"\n                  value=${this.initialLifeTracker}\n                  @sl-change=${this.setInitialLifeTracker}\n                  min=\"0\"\n                  style=\"width: 15rem; text-align: center;\"\n                >\n                </sl-input>\n              </div>\n              <div class=\"form-2-column\">\n                <form class=\"form-player-input\">\n                  <sl-input\n                    type=\"text\"\n                    label=\"Player 1\"\n                    size=\"medium\"\n                    pill\n                    clearable\n                    placeholder=\"Add player name\"\n                    value=${this.playerHandle1}\n                    @sl-change=${(e: CustomEvent) => this.handlePlayerHandleChange(1, e)}\n                  >\n                    <sl-icon library=\"mana\" slot=\"prefix\" name=\"saga\" class=\"ms ms-saga-1 ms-small\"></sl-icon>\n                  </sl-input>\n                  <sl-input\n                    type=\"text\"\n                    label=\"Player 3\"\n                    size=\"medium\"\n                    clearable\n                    pill\n                    placeholder=\"Add player name\"\n                    value=${this.playerHandle3}\n                    @sl-change=${(e: CustomEvent) => this.handlePlayerHandleChange(3, e)}\n                  >\n                    <sl-icon library=\"mana\" slot=\"prefix\" name=\"saga\" class=\"ms ms-saga-3 ms-small\"></sl-icon>\n                  </sl-input>\n                </form>\n                <form class=\"form-player-input\">\n                  <sl-input\n                    type=\"text\"\n                    label=\"Player 2\"\n                    size=\"medium\"\n                    clearable\n                    pill\n                    placeholder=\"Add player name\"\n                    value=${this.playerHandle2}\n                    @sl-change=${(e: CustomEvent) => this.handlePlayerHandleChange(2, e)}\n                  >\n                    <sl-icon library=\"mana\" slot=\"prefix\" name=\"saga\" class=\"ms ms-saga-2 ms-small\"></sl-icon>\n                  </sl-input>\n                  <sl-input\n                    type=\"text\"\n                    label=\"Player 4\"\n                    size=\"medium\"\n                    clearable\n                    pill\n                    placeholder=\"Add player name\"\n                    value=${this.playerHandle4}\n                    @sl-change=${(e: CustomEvent) => this.handlePlayerHandleChange(4, e)}\n                  >\n                    <sl-icon library=\"mana\" slot=\"prefix\" name=\"saga\" class=\"ms ms-saga-4 ms-small\"></sl-icon>\n                  </sl-input>\n                </form>\n              </div>\n              <div style=\"display: flex; flex-direction: row; justify-content: center; padding-top: 1rem; gap: 1rem;\">\n                <sl-button variant=\"success\" pill @click=${this.exportToCSV}>\n                  <sl-icon name=\"file-earmark-excel-fill\" slot=\"prefix\"></sl-icon>\n                  Export to CSV\n                </sl-button>\n                <sl-button variant=\"danger\" pill @click=${this.resetWithAlert}>\n                  <sl-icon name=\"x-square-fill\" slot=\"prefix\"></sl-icon>\n                  Reset All\n                </sl-button>\n              </div>\n            </sl-tab-panel>\n            <sl-tab-panel name=\"action-log\">\n              <sl-menu>\n                ${menuContent}\n              </sl-menu>\n            </sl-tab-panel>\n            <sl-tab-panel name=\"results\">\n              <div style=\"display: flex; justify-content: flex-end; align-items: center;\">\n                <sl-button-group label=\"Alignment\">\n                  <sl-button size=\"medium\" pill class=\"player-one-winner\" @click=${() => this.recordResult(1)}>\n                    Winner\n                  </sl-button>\n                  <sl-button size=\"medium\" pill class=\"player-two-winner\" @click=${() => this.recordResult(2)}>\n                    Winner\n                  </sl-button>\n                  <sl-button size=\"medium\" pill class=\"player-three-winner\" @click=${() => this.recordResult(3)}>\n                    Winner\n                  </sl-button>\n                  <sl-button size=\"medium\" pill class=\"player-four-winner\" @click=${() => this.recordResult(4)}>\n                    Winner\n                  </sl-button>\n                </sl-button-group>\n              </div>\n              <table class=\"border table-striped\">\n                <thead>\n                  <tr>\n                    <th>\n                      ${this.playerHandle1}\n                    <th>\n                      ${this.playerHandle2}\n                    </th>\n                    <th>\n                      ${this.playerHandle3}\n                    </th>\n                    <th>\n                      ${this.playerHandle4}\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  ${this.matchResults.map(\n                    (result) => html`\n                      <tr>\n                        <td>${result.player1Outcome}</td>\n                        <td>${result.player2Outcome}</td>\n                        <td>${result.player3Outcome}</td>\n                        <td>${result.player4Outcome}</td>\n                      </tr>\n                    `\n                  )}\n                </tbody>\n              </table>\n            </sl-tab-panel>\n          </sl-tab-group>\n        </div>\n      </main>\n    `;\n  }\n}\n","import { LitElement, html } from 'lit';\nimport { property, customElement } from 'lit/decorators.js';\nimport { resolveRouterPath } from '../router';\n\n@customElement('fab-drawer')\n  export class FabDrawer extends LitElement {\n    @property({ type: String }) icon = 'arrow-left'\n\n    @property({ type: Boolean }) isOpen: boolean = false;\n    @property({ type: String }) message: string = '';\n    @property({ type: String }) pointsTracker: string = '';\n\n    openFab(pointsTracker: string) {\n      this.pointsTracker = pointsTracker;\n      this.isOpen = true;\n    }\n    open(message: string) {\n      this.message = message;\n      this.isOpen = true;\n    }\n    close() {\n      this.dispatchEvent(new CustomEvent('close'));\n      this.isOpen = false;\n    }\n  render() {\n    if (!this.isOpen) {\n      return html``;\n    }\n    return html `\n      <sl-drawer\n        placement=\"top\"\n        label=\"Drawer\"\n        with-header\n        with-footer\n        class=\"drawer-contained\"\n        style=\"--size: 50vh;\"\n        ?open=${this.isOpen}\n        @sl-after-close=${this.close}\n      >\n        <sl-icon-button slot=\"header-actions\" name=\"info-circle\" href=\"${resolveRouterPath('about')}\"></sl-icon-button>\n                <sl-input\n          type=\"number\"\n          label=\"Starting Points\"\n          size=\"medium\"\n          pill\n          placeholder=\"Enter a number greater than 0\"\n          type=\"number\"\n          value=${this.pointsTracker}\n          @sl-change=${this.pointsTracker}\n          min=\"0\"\n          style=\"text-align: center;\"\n        >\n        </sl-input>\n        ${this.message}\n        <sl-button slot=\"footer\" variant=\"primary\" data-drawer=\"close\" @click=${this.close}>Close</sl-button>\n      </sl-drawer>\n    `;\n  }\n}\n","import { LitElement, css, html } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport '../../components/icons/mana-icon';\nimport '../../components/icons/mtg-symbols';\nimport '../../components/match-tracker/match-tracker'; // Import the component\nimport '../../components/fab';\n\n@customElement('app-counter')\nexport class AppCounter extends LitElement {\n  @state() fabDrawerOpen = false;\n  openFabDrawer() {\n    this.fabDrawerOpen = true;\n  }\n  closeFabDrawer() {\n    this.fabDrawerOpen = false;\n  }\n  fabTab() {\n    return html`\n      <sl-tab slot=\"nav\" panel=\"total\">Total</sl-tab>\n      <sl-tab slot=\"nav\" panel=\"standings\">Standings</sl-tab>\n      <sl-tab slot=\"nav\" panel=\"results\">Results</sl-tab>\n      <sl-tab slot=\"nav\" panel=\"action-log\">Log</sl-tab>\n      <sl-tab slot=\"nav\" panel=\"setup\">Setup</sl-tab>\n    `\n  }\n  static styles = css`\n    sl-button.fab {\n      position: absolute;\n      bottom: 16px;\n      right: 16px;\n      z-index: 1000;\n    }\n  `;\n  render() {\n    return html`\n      <!-- <app-header ?enableBack=\"${true}\"></app-header> -->\n      <match-tracker></match-tracker>\n      <app-navigation></app-navigation>\n    `;\n  }\n}\n\n// <sl-button variant=\"primary\" size=\"large\" class=\"fab\" circle @click=${this.openFabDrawer}>\n// <sl-icon name=\"gear\" label=\"settings\"></sl-icon>\n// </sl-button>\n// <fab-drawer\n// .isOpen=${this.fabDrawerOpen}\n// message=${this.fabTab}\n// @close=${this.closeFabDrawer}\n// ></fab-drawer>\n"],"names":["manaStyles","css","MatchTracker","LitElement","tabName","player","change","action","playerData","value","newLife","game","event","input","newName","winner","player1Outcome","player2Outcome","player3Outcome","player4Outcome","newResult","data","localForage","playerHandle","playerResults","result","wins","losses","draws","csvContent","encodedUri","link","arr","header","rows","obj","playerLogItems","log","iconName","badgeName","logItem","html","nothing","playerMenuItems","logs","emptyState","menuContent","e","sharedStyles","shoelaceStyles","tableStyles","counterStyles","__decorateClass","property","state","query","customElement","FabDrawer","pointsTracker","message","resolveRouterPath","AppCounter"],"mappings":"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"}