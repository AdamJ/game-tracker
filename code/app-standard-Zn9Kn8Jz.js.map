{"version":3,"file":"app-standard-Zn9Kn8Jz.js","sources":["../../src/components/standard-tracker/standard-styles.ts","../../src/components/standard-tracker/standard-tracker.ts","../../src/pages/app-standard/app-standard.ts"],"sourcesContent":["import { css } from 'lit';\n\nexport const standardStyles = css`\n  @media screen and (min-width: 600px) {\n    .standard-tracker {\n      display: flex;\n      flex-direction: row;\n      justify-content: space-evenly;\n      grid-gap: 1rem;\n    }\n    sl-card.side-one::part(base),\n    sl-card.side-two::part(base) {\n      border-radius: 1rem !important;\n    }\n  }\n  nav {\n    padding: .25rem;\n  }\n  .tree-with-lines {\n    --indent-guide-width: 1px;\n    --indent-guide-color: var(--sl-color-primary-600);\n  }\n  sl-card.side-one::part(base),\n  sl-card.side-two::part(base) {\n    border-radius: 0 0 1rem 1rem;\n  }\n  sl-card.side-one::part(base),\n  sl-button.side-one::part(base) {\n    background-color: var(--ms-mana-p-bg);\n    color: var(--sl-color-neutral-50);\n    border: 0;\n  }\n  sl-card.side-two::part(base),\n  sl-button.side-two::part(base) {\n    background-color: var(--ms-mana-b-bg);\n    color: var(--sl-color-neutral-100);\n    border: 0;\n  }\n  .form-2-column {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  .form-player-input {\n    width: 100%;\n  }\n  @media (min-width: 1000px) {\n    .form-2-column {\n      flex-direction: row;\n    }\n  }\n  sl-card.side-one,\n  sl-button.side-one {\n    transition: transform 0.3s ease;\n  }\n  @media (orientation: portrait) {\n    sl-card.side-one {\n      transform: rotate(180deg);\n    }\n  }\n  @media (orientation: landscape): {\n    sl-card.side-one {\n      transform: rotate(180deg);\n    }\n  }\n  @media screen and (min-width: 600px) {\n    sl-card.side-one {\n      transform: rotate(0deg);\n    }\n  }\n`;\n","import { LitElement, html, css } from 'lit';\nimport { customElement, property, state, query } from 'lit/decorators.js';\nimport localForage from 'localforage';\nimport '../icons/mana-icon';\nimport '../icons/mtg-symbols';\nimport '@shoelace-style/shoelace/dist/components/alert/alert.js';\nimport '@shoelace-style/shoelace/dist/components/button/button.js';\nimport '@shoelace-style/shoelace/dist/components/card/card.js';\nimport '@shoelace-style/shoelace/dist/components/drawer/drawer.js';\nimport '@shoelace-style/shoelace/dist/components/tree/tree';\nimport '@shoelace-style/shoelace/dist/components/tree-item/tree-item';\n\nimport { sharedStyles } from '../../styles/shared-styles';\nimport { shoelaceStyles } from '../../styles/shoelace-styles';\nimport { counterStyles } from '../../pages/app-counter/counter-styles';\nimport { standardStyles } from './standard-styles';\nimport { tableStyles } from '../../styles/table-styles';\nimport { alertStyles } from '../../styles/alert-styles';\n\ninterface Side {\n  points: number;\n}\n\ninterface Game {\n  sideOne: string;\n  sideTwo: string;\n  result: 'win' | 'loss' | 'draw';\n  victor: string | \"draw\" | null;\n}\n\ninterface MatchResult {\n  sideOneHandle: string;\n  sideTwoHandle: string;\n  sideOnePointsTracker: number;\n  sideTwoPointsTracker: number;\n  sideOneOutcome: 'win' | 'loss' | 'draw';\n  sideTwoOutcome: 'win' | 'loss' | 'draw';\n}\n\ninterface LogEntry {\n  side: string;\n  action: string;\n  points: number;\n}\n\n@customElement('standard-tracker')\nexport class MatchTracker extends LitElement {\n  @property({ type: Object }) side1: Side = { points: 20 };\n  @property({ type: Object }) side2: Side = { points: 20 };\n\n  @state() matchResults: MatchResult[] = []; // Array to store game results\n  @state() sideHandle1: string = \"Side 1\";\n  @state() sideHandle2: string = \"Side 2\";\n  @state() initialPointsTracker: number = 20;\n  @state() isDrawerOpen = false; //Add a state to track if the drawer is open.\n  @state() isAlertOpen = false; //Add a state to track if the drawer is open.\n\n  @query('.drawer-custom-size') drawer: any; // Query for the drawer element\n  @query('.alert-closable') alert: any; // Query for the drawer element\n\n  private storageKey = 'sideData'; // Key for localForage\n\n  @property({ type: Array }) gameHistory: Game[] = [];\n\n  constructor() {\n    super();\n    this.loadFromStorage(); // Load data when component initializes\n  }\n\n  firstUpdated() { // Called after the first render\n    this.saveToStorage(); // Save initial data to storage.\n  }\n\n  static styles = [\n    sharedStyles,\n    shoelaceStyles,\n    counterStyles,\n    tableStyles,\n    alertStyles,\n    standardStyles,\n    css`\n      @media screen and (max-width: 595px) {\n        .standard-tracker,\n        .side-one,\n        .side-two,\n        sl-card::part(base) {\n          height: 45vh !important;\n        }\n        .card-form > p {\n          font-size: calc(16px * 3);\n        }\n       .settings-fab {\n          position: absolute;\n          display: block;\n          top: 50%;\n          right: 50%;\n          width: 28px;\n        }\n      }\n      @media screen and (min-width: 600px) {\n        main {\n          height: calc(100vh - 55px) !important\n        }\n        .standard-tracker,\n        .side-one,\n        .side-two,\n        sl-card::part(base) {\n          height: 100%;\n        }\n        sl-card::part(body) {\n          height: 100%;\n          display: flex;\n          justify-content: center;\n        }\n        .card-form {\n          justify-content: space-between;\n        }\n        .card-form > sl-button {\n          width: 40vw;\n          display: flex;\n          align-items: center;\n        }\n        .card-form > p {\n          font-size: calc(16px * 4);\n        }\n        .reset-points-form {\n          flex-direction: row;\n          justify-content: center;\n          align-items: center;\n          grid-gap: 1rem;\n        }\n        sl-button.reset-points-button::part(base) {\n          margin-top: 1rem;\n        }\n        sl-drawer {\n          --size: 75vh !important;\n        }\n      }\n      .standard-tracker,\n      .side-one,\n      .side-two,\n      sl-card::part(base) {\n        height: 100%;\n        align-items: center;\n        align-content: center;\n        color: var(--sl-color-neutral-50);\n      }\n      sl-button [slot=\"prefix\"] {\n        color: var(--sl-color-neutral-50) !important;\n      }\n      sl-card::part(body) {\n        height: 100%;\n        display: flex;\n        justify-content: center;\n      }\n      .settings-fab {\n        position: absolute;\n        display: block;\n        top: 50%;\n        right: 50%;\n        width: 16px;\n      }\n    `\n  ]\n  @state() sideLogs: LogEntry[] = [];\n\n  @state() sideHandle1Actions: string[] = [];\n  @state() sideHandle2Actions: string[] = [];\n\n  private updatePoints(side: 1 | 2, change: number, action: 'Plus' | 'Minus') {\n    const sideMap = {\n      1: { side: this.side1, sideHandle: this.sideHandle1, setter: (value: Side) => { this.side1 = value; } },\n      2: { side: this.side2, sideHandle: this.sideHandle2, setter: (value: Side) => { this.side2 = value; } },\n    };\n\n    const sideData = sideMap[side];\n\n    if (sideData) {\n        // Update the life total, ensuring it doesn't go below 0\n        const newPoints = Math.max(0, sideData.side.points + change);\n\n        // Update the side state\n        sideData.setter({...sideData.side, points: newPoints});\n\n        // Log the action\n        console.log(`${action} ${Math.abs(change)} to ${newPoints} for ${sideData.sideHandle}`);\n\n        // Record the action\n        this.sideLogs = [...this.sideLogs, { side: sideData.sideHandle, action: `${action}`, points: newPoints }];\n\n        //Update the main storage\n        this.saveToStorage();\n    }\n  }\n\n  private setInitialPointsTracker(event: CustomEvent) {\n    const input = event.target as HTMLInputElement;\n    const newPoints = parseInt(input.value, 10);\n\n    if (!isNaN(newPoints) && newPoints >= 0) {\n      this.initialPointsTracker = newPoints;\n      this.side1 = { points: newPoints };\n      this.side2 = { points: newPoints };\n      this.saveToStorage(); // Save after initial points change\n    } else {\n      alert(\"Please enter a valid positive number for starting points.\");\n      input.value = this.initialPointsTracker.toString();\n    }\n  }\n\n  // private handleSideHandleChange(side: 1 | 2, event: CustomEvent) {\n  //   const sideMap = {\n  //     1: { name: \"side 1\", setter: (value: string) => { this.sideHandle1 = value; } },\n  //     2: { name: \"side 2\", setter: (value: string) => { this.sideHandle2 = value; } },\n  //   };\n\n  //   const sideData = sideMap[side];\n\n  //   if (sideData) {\n  //     const newName = (event.target as HTMLInputElement).value || sideData.name;\n  //     sideData.setter(newName);\n  //     this.saveToStorage();\n  //   }\n  // }\n\n  private toggleDrawer() {\n    this.isDrawerOpen = !this.isDrawerOpen;\n  }\n\n  private closeDrawer(){\n    this.isDrawerOpen = false;\n  }\n  private closeAlert(){\n    this.isAlertOpen = false;\n  }\n  private resetWithAlert(){\n    this.resetGame();\n    this.isAlertOpen = true;\n  }\n\n  // private recordResult(victor: 1 | 2 | 'draw') {\n  //   let sideOneOutcome: 'win' | 'loss' | 'draw' = 'loss';\n  //   let sideTwoOutcome: 'win' | 'loss' | 'draw' = 'loss';\n\n  //   if (victor === 1) {\n  //     sideOneOutcome = 'win';\n  //     sideTwoOutcome = 'loss';\n  //   } else if (victor === 2) {\n  //     sideOneOutcome = 'loss';\n  //     sideTwoOutcome = 'win';\n  //   } else if (victor === 'draw') {\n  //     sideOneOutcome = 'draw';\n  //     sideTwoOutcome = 'draw';\n  //   }\n\n  //   const newResult: MatchResult = {\n  //     sideOneHandle: this.sideHandle1,\n  //     sideTwoHandle: this.sideHandle2,\n  //     sideOnePointsTracker: this.side1.points,\n  //     sideTwoPointsTracker: this.side2.points,\n  //     sideOneOutcome,\n  //     sideTwoOutcome,\n  //   };\n\n  //   this.matchResults = [...this.matchResults, newResult];\n  //   this.saveToStorage();\n  //   this.resetGame(); // Reset the game for a new round\n  // }\n\n  private resetGame() {\n      this.side1 = { points: this.initialPointsTracker };\n      this.side2 = { points: this.initialPointsTracker };\n  }\n\n  private saveToStorage() {\n    const data = {\n      initialPointsTracker: this.initialPointsTracker,\n      matchResults: this.matchResults,\n      side1: this.side1,\n      side2: this.side2,\n      sideHandle1: this.sideHandle1,\n      sideHandle2: this.sideHandle2,\n      sideLogs: this.sideLogs,\n    };\n    localForage.setItem(this.storageKey, data).catch(console.error);\n  }\n\n  private loadFromStorage() {\n    localForage.getItem(this.storageKey).then((data: any) => {\n      if (data) {\n        this.initialPointsTracker = data.initialPointsTracker || 20;\n        this.matchResults = data.matchResults || [];\n        this.side1 = data.side1 || { points: 20 };\n        this.side2 = data.side2 || { points: 20 };\n        this.sideHandle1 = data.sideHandle1 || \"Side 1\";\n        this.sideHandle2 = data.sideHandle2 || \"Side 2\";\n        this.sideHandle1Actions = data.sideHandle1Actions || [];\n        this.sideHandle2Actions = data.sideHandle2Actions || [];\n      }\n    }).catch(console.error);\n  }\n  // private getSideStats(playerHandle: string) {\n  //   const sideResults = this.matchResults.filter(\n  //     (result) => result.sideOneHandle === playerHandle || result.sideTwoHandle === playerHandle\n  //   );\n\n  //   const wins = sideResults.filter(\n  //     (result) =>\n  //       (result.sideOneHandle === playerHandle && result.sideOneOutcome === 'win') ||\n  //       (result.sideTwoHandle === playerHandle && result.sideTwoOutcome === 'win')\n  //   ).length;\n\n  //   const losses = playerResults.filter(\n  //     (result) =>\n  //       (result.sideOneHandle === playerHandle && result.sideOneOutcome === 'loss') ||\n  //       (result.sideTwoHandle === playerHandle && result.sideTwoOutcome === 'loss')\n  //   ).length;\n\n  //   const draws = playerResults.filter(\n  //     (result) =>\n  //       (result.sideOneHandle === playerHandle && result.sideOneOutcome === 'draw') ||\n  //       (result.sideTwoHandle === playerHandle && result.sideTwoOutcome === 'draw')\n  //   ).length;\n\n  //   return { wins, losses, draws };\n  // }\n  render() {\n  // Clear previous log items\n  const sideLogItems = new Map<string, string[]>();\n\n  this.sideLogs.forEach(log => {\n    if (!sideLogItems.has(log.side)) {\n      sideLogItems.set(log.side, []);\n    }\n    // const iconName = this.getSideIconVariant(log);\n    // const badgeName = this.getSideBadgeVariant(log);\n    const logItem = html`\n      <sl-tree-item>\n        ${log.action}\n        to <sl-badge variant=\"neutral\" pill style=\"padding-left: 2px;\">${log.points}</sl-badge>\n      </sl-tree-item>\n    `;\n    // @ts-ignore\n    sideLogItems.get(log.side)?.push(logItem);\n  });\n  // Render menu items for each player\n  const sideMenuItems = [];\n  for (const [player, logs] of sideLogItems) {\n      sideMenuItems.push(html`\n        <sl-tree-item>${player}\n        ${logs.map(log => html`\n          ${log}\n        </sl-tree-item>\n        `)}\n      `);\n  }\n  // Empty state logic\n  const emptyState = html`\n    <sl-tree-item>\n      No match history to display.\n    </sl-tree-item>\n  `;\n\n  const menuContent = sideMenuItems.length > 0 ? sideMenuItems : emptyState;\n\n  return html`\n    <app-header ?enableBack=\"${true}\"></app-header>\n    <main style=\"height: 100%; padding: 0; margin: 0 .5rem; margin-top: 55px;\">\n      <div class=\"standard-tracker\">\n        <sl-card class=\"side-one\">\n          <form class=\"card-form\" style=\"position: relative;\">\n            <sl-button variant=\"default\" size=\"large\" class=\"life-counter side-one\" @click=${() => this.updatePoints(1, 1, 'Plus')}>\n              <span style=\"font-size: 1.75rem; color: var(--sl-color-neutral-950);\">\n                <sl-icon slot=\"prefix\" name=\"shield-fill-plus\"></sl-icon>\n              </span>\n              Plus\n            </sl-button>\n            <p class=\"text-center ms-4x\" style=\"line-height: normal; margin: 0;\">\n              ${this.side1.points}\n            </p>\n            <sl-button variant=\"default\" size=\"large\" class=\"life-counter side-one\" @click=${() => this.updatePoints(1, -1, 'Minus')}>\n              <span style=\"font-size: 1.75rem; color: var(--sl-color-neutral-950);\">\n                <sl-icon slot=\"prefix\" name=\"shield-fill-minus\"></sl-icon>\n              </span>\n              Minus\n            </sl-button>\n          </form>\n        </sl-card>\n        <sl-card class=\"side-two\">\n          <form class=\"card-form\" style=\"position: relative;\">\n            <sl-button variant=\"default\" size=\"large\" class=\"life-counter side-two\" @click=${() => this.updatePoints(2, 1, 'Plus')}>\n              <span style=\"font-size: 1.75rem; color: orange;\">\n                <sl-icon slot=\"prefix\" name=\"shield-fill-plus\"></sl-icon>\n              </span>\n              Plus\n            </sl-button>\n            <p class=\"text-center ms-4x\" style=\"line-height: normal; margin: 0;\">\n              ${this.side2.points}\n            </p>\n            <sl-button variant=\"default\" size=\"large\" class=\"life-counter side-two\" @click=${() => this.updatePoints(2, -1, 'Minus')}>\n              <span style=\"font-size: 1.75rem; color: var(--sl-color-neutral-50);\">\n                <sl-icon slot=\"prefix\" name=\"shield-fill-minus\"></sl-icon>\n              </span>\n              Minus\n            </sl-button>\n          </form>\n        </sl-card>\n      </div>\n      <sl-drawer label=\"Configuration\" placement=\"top\" class=\"drawer-custom-size\" ?open=${this.isDrawerOpen} @sl-after-hide=${this.closeDrawer}>\n          <form class=\"reset-points-form\">\n            <sl-input\n              type=\"number\"\n              label=\"Starting Points\"\n              size=\"medium\"\n              autofocus\n              pill\n              placeholder=\"Starting points must be greater than 0\"\n              type=\"number\"\n              value=${this.initialPointsTracker}\n              @sl-change=${this.setInitialPointsTracker}\n              min=\"0\"\n              style=\"text-align: center; margin-bottom: .5rem;\"\n            >\n            </sl-input>\n            <sl-button\n              variant=\"danger\"\n              size=\"small\"\n              pill\n              @click=${this.resetWithAlert}\n              class=\"reset-points-button\"\n            >\n              Reset Starting Points\n            </sl-button>\n          </form>\n          <sl-alert variant=\"primary\" open duration=\"1500\" closable class=\"alert-closable\" ?open=${this.isAlertOpen} @sl-after-hide=${this.closeAlert}>\n            <sl-icon slot=\"icon\" name=\"info-circle\"></sl-icon>\n            Starting points have been reset to ${this.initialPointsTracker}.\n          </sl-alert>\n          <h3>History</h3>\n          <sl-tree class=\"tree-with-lines\" style=\"color: var(--sl-color-neutral-50);\">\n            ${menuContent}\n          </sl-tree>\n        <sl-button slot=\"footer\" variant=\"primary\" pill @click=${this.closeDrawer}>Close</sl-button>\n      </sl-drawer>\n      <div class=\"fab-container\">\n        <sl-button variant=\"neutral\" size=\"large\" circle @click=${this.toggleDrawer}>\n          <sl-icon name=\"gear\" label=\"settings\"></sl-icon>\n        </sl-button>\n      </div>\n      <style>\n        @media screen and (max-width: 600px) {\n          .fab-container {\n            top: calc(50vh - 72px) !important;\n          }\n        }\n        .fab-container {\n          position: absolute;\n          height: 56px;\n          width: 56px;\n          top: calc(50% - 24px);\n          right: calc(50vw - 1.5rem);\n          box-shadow: 4px 4px 4px 0px rgba(0, 0, 0, .5);\n          border-radius: 50%;\n        }\n      </style>\n\n      </main>\n  `}\n}\n","import { LitElement, css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport '../../components/icons/mana-icon';\nimport '../../components/icons/mtg-symbols';\nimport '../../components/standard-tracker/standard-tracker'; // Import the component\n\n@customElement('app-standard')\nexport class PvpCounter extends LitElement {\n  static styles = css`\n    sl-button.fab {\n      position: absolute;\n      bottom: 16px;\n      right: 16px;\n      z-index: 1000;\n    }\n  `;\n  render() {\n    return html`\n      <app-header ?enableBack=\"${true}\"></app-header>\n      <standard-tracker></standard-tracker>\n    `;\n  }\n}\n"],"names":["standardStyles","css","MatchTracker","LitElement","side","change","action","sideData","value","newPoints","event","input","data","localForage","sideLogItems","log","logItem","html","sideMenuItems","player","logs","emptyState","menuContent","sharedStyles","shoelaceStyles","counterStyles","tableStyles","alertStyles","__decorateClass","property","state","query","customElement","PvpCounter"],"mappings":"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"}