{"version":3,"file":"app-game-tracker-CHeaPawY.js","sources":["../../src/components/game-tracker/player-input.ts","../../src/components/game-tracker/game-tracker-styles.ts","../../src/components/game-tracker/match-input.ts","../../src/components/game-tracker/standings-display.ts","../../src/components/edit-modal.ts","../../src/components/game-tracker/match-history.ts","../../src/components/confirmation-modal.ts","../../src/components/game-tracker/standings-tracker.ts","../../src/pages/app-game-tracker.ts"],"sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { state, customElement, property } from 'lit/decorators.js';\n\nimport { sharedStyles } from '../../styles/shared-styles';\nimport { shoelaceStyles } from '../../styles/shoelace-styles';\n\n@customElement('player-input')\nexport class PlayerInput extends LitElement {\n  static styles = [\n    sharedStyles,\n    shoelaceStyles,\n    css `\n\n    `\n  ]\n\n  @property({ type: Array }) players: string[] = [];\n  @state() newPlayer: string = '';\n  @state() errorMessage: string = '';\n\n  handleSubmit(event: Event) {\n    event.preventDefault(); // Prevent the default form submission behavior (page refresh)\n    this.addPlayer();\n  }\n\n  addPlayer() { // Add the event parameter\n    console.log('addPlayer called');\n    if (this.newPlayer && this.validatePlayerName(this.newPlayer)) {\n        this.dispatchEvent(new CustomEvent('player-added', { detail: this.newPlayer }));\n        this.newPlayer = '';\n        const inputElement = this.shadowRoot!.querySelector('sl-input');\n        if(inputElement){\n          inputElement.helpText = '';\n        }\n    } else {\n      const inputElement = this.shadowRoot!.querySelector('sl-input');\n      if(inputElement){\n        inputElement.helpText = this.errorMessage;\n      }\n    }\n  }\n\n  handleInputChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.newPlayer = input.value;\n    const inputElement = this.shadowRoot!.querySelector('sl-input');\n    if(inputElement){\n        if(!this.validatePlayerName(this.newPlayer)){\n          inputElement.helpText = this.errorMessage;\n        } else{\n          inputElement.helpText = '';\n        }\n    }\n  }\n\n  validatePlayerName(playerName: string){\n    const isValid = /^[a-zA-Z0-9]+$/.test(playerName);\n    console.log('isValid:', isValid);\n    if (isValid) {\n      this.errorMessage = '';\n      return true;\n    } else {\n      this.errorMessage = 'Enter a Name containing only letters or numbers with no spaces or special characters.';\n      return false;\n    }\n  }\n\n  removePlayer(playerName: string) {\n    this.dispatchEvent(new CustomEvent('remove-player', { detail: playerName }));\n  }\n\n  clearAllPlayers() {\n    this.dispatchEvent(new CustomEvent('clear-all-players'));\n  }\n\n  render() {\n    return html`\n      <div style=\"display: flex; flex-direction: row; justify-content: space-between; flex-wrap: wrap; grid-gap: 1rem;\">\n        <form\n          class=\"input-validation-custom\"\n          @submit=${this.handleSubmit}\n        >\n          <sl-input\n            .value=${this.newPlayer}\n            @sl-input=${this.handleInputChange}\n            spellcheck=\"true\"\n            name=\"name\"\n            label=\"Name\"\n            pill\n            required\n            clearable\n            autofocus\n            autocomplete=\"off\"\n            help-text=${this.errorMessage}\n            class=\"player-input\"\n            style=\"min-width: 20rem;\"\n          >\n            <sl-icon library=\"default\" name=\"person\" slot=\"prefix\"></sl-icon>\n          </sl-input>\n          <sl-button\n            type=\"button\"\n            variant=\"primary\"\n            pill\n            @click=${this.addPlayer}\n            class=\"larger-icon\"\n          >\n            <sl-icon library=\"default\" slot=\"prefix\" name=\"person-fill-add\"></sl-icon>\n            Add Player\n          </sl-button>\n        </form>\n        <div style=\"display: flex; flex-direction: column; grid-gap: .5rem; flex: 1;\">\n          <p style=\"margin-top: .25rem; margin-bottom: .25rem;\">\n            <strong>Player List</strong>\n          </p>\n          <div style=\"display: flex; flex-direction: row; flex-wrap: wrap; justify-content: flex-start; grid-gap: .5rem; width: 100%;\">\n            ${this.players.map(player => html`\n              <sl-tag removable @sl-remove=${() => this.removePlayer(player)}>\n                ${player}\n              </sl-tag>\n            `)}\n          </div>\n        </div>\n      </div>\n      <style>\n        sl-tab-panel {\n          margin-left: 1rem;\n          margin-right: 1rem;\n        }\n        sl-card {\n          width: 100%;\n        }\n        .player-input::part(form-control-help-text) {\n          color: var(--sl-color-danger-600);\n        }\n        .player-input::part(form-control-help-text)[attr=\"All fixed!\"] {\n          color: var(--sl-color-success-600);\n        }\n        .input-validation-custom {\n          display: flex;\n          flex-direction: column;\n          align-items: flex-start;\n          gap: .5rem;\n          flex: 1;\n        }\n      </style>\n      `;\n    }\n}\n","import { css } from 'lit';\n\nexport const gameTrackerStyles = css`\n  sl-input::part(base) {\n    border-radius: 0.75rem;\n    background: var(--Recessed);\n    background-blend-mode: luminosity, color-burn;\n    box-shadow: 0px -0.5px 1px 0px rgba(255, 255, 255, 0.30) inset, 0px -0.5px 1px 0px rgba(255, 255, 255, 0.25) inset, 1px 1.5px 4px 0px rgba(0, 0, 0, 0.08) inset, 1px 1.5px 4px 0px rgba(0, 0, 0, 0.10) inset;\n  }\n  sl-radio-group::part(form-control-input) {\n    display: flex;\n    flex-direction: row;\n    grid-gap: 1rem;\n  }\n`;\n","import { LitElement, html } from 'lit';\nimport { state, customElement, property } from 'lit/decorators.js';\nimport '../icons/mana-icon.js';\n\nimport { shoelaceStyles } from '../../styles/shoelace-styles.js';\nimport { gameTrackerStyles } from './game-tracker-styles.js';\n\ninterface Player {\n  name: string;\n}\n\n@customElement('match-input')\nexport class MatchInput extends LitElement {\n  @property({ type: Array }) players: Player[] = [];\n  @state() player1: string = ''; // Initialize to empty strings\n  @state() player2: string = ''; // Initialize to empty strings\n  @state() winner: string | null = 'draw'; // Initialize to \"draw\"\n\n  static styles = [\n    shoelaceStyles,\n    gameTrackerStyles\n  ]\n\n  recordMatch() {\n    if (this.player1 && this.player2 && this.player1 !== this.player2) {\n      let result: 'win' | 'loss' | 'draw';\n      if (this.winner === 'draw') {\n        result = 'draw';\n      } else if (this.winner === this.player1) {\n        result = 'win';\n      } else {\n        result = 'loss';\n      }\n\n      this.dispatchEvent(\n        new CustomEvent('match-recorded', {\n          detail: {\n            player1: this.player1,\n            player2: this.player2,\n            result: result,\n            winner: this.winner, // include the winner in the details\n          },\n        })\n      );\n    }\n  }\n\n  handlePlayer1Change(event: Event) {\n    const select = event.target as HTMLSelectElement;\n    this.player1 = select.value as string;\n    if (this.winner === this.player2 || this.winner === this.player1) {\n      this.winner = 'draw';\n    }\n  }\n\n  handlePlayer2Change(event: Event) {\n    const select = event.target as HTMLSelectElement;\n    this.player2 = select.value as string;\n        if (this.winner === this.player1 || this.winner === this.player2) {\n          this.winner = 'draw';\n        }\n  }\n\n  handleWinnerChange(event: Event) {\n    const radioGroup = event.target as HTMLInputElement;\n    this.winner = radioGroup.value === 'draw' ? 'draw' : radioGroup.value as string | null;\n  }\n\n  render() {\n    // Dynamically generate options for Player 1\n    const player1Options = this.players.filter(\n      (player) => player.name !== this.player2\n    );\n\n    // Dynamically generate options for Player 2\n    const player2Options = this.players.filter(\n      (player) => player.name !== this.player1\n    );\n\n      // Check if both players are selected\n      const playersSelected = this.player1 !== '' && this.player2 !== '';\n      const playerOneValue = this.player1 === '' ? 'Player 1' : this.player1;\n      const playerTwoValue = this.player2 === '' ? 'Player 2' : this.player2;\n\n    return html`\n      <form>\n        <sl-select\n          value=${this.player1}\n          @sl-change=${this.handlePlayer1Change}\n          label=\"Player 1\"\n          clearable\n          pill\n          class=\"ios-select\"\n        >\n          <sl-option value=\"\">Select a player</sl-option>\n          ${player1Options.map(\n            (player) =>\n              html`<sl-option value=${player.name}>${player.name}</sl-option>`\n          )}\n        </sl-select>\n        <br />\n        <sl-select\n          value=${this.player2}\n          @sl-change=${this.handlePlayer2Change}\n          label=\"Player 2\"\n          clearable\n          pill\n        >\n          <sl-option value=\"\">Select a player</sl-option>\n          ${player2Options.map(\n            (player) =>\n              html`<sl-option value=${player.name}>${player.name}</sl-option>`\n          )}\n        </sl-select>\n        <br />\n        <sl-radio-group\n          size=\"medium\"\n          label=\"Select a winner\"\n          name=\"winner\"\n          @sl-change=${this.handleWinnerChange}\n          value=\"${this.winner}\"\n          aria-label=\"Win selector group\"\n          style=\"display: flex; flex-direction: row;\"\n        >\n          <sl-radio\n            value=${this.player1}\n            ?disabled=\"${!playersSelected}\"\n            aria-label=\"select for player one\"\n            pill\n          >\n            ${playerOneValue}\n          </sl-radio>\n          <sl-radio\n            value=\"draw\"\n            ?disabled=\"${!playersSelected}\"\n            aria-label=\"select for a draw\"\n            pill\n          >\n            Draw\n          </sl-radio>\n          <sl-radio\n            value=${this.player2}\n            ?disabled=\"${!playersSelected}\"\n            aria-label=\"select for player two\"\n            pill\n          >\n            ${playerTwoValue}\n          </sl-radio>\n        </sl-radio-group>\n        <br />\n        <sl-button variant=\"success\" pill @click=${this.recordMatch} ?disabled=${!playersSelected}>\n          Record Result</sl-button>\n      </form>\n    `;\n  }\n}\n","import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { sharedStyles } from '../../styles/shared-styles';\nimport { shoelaceStyles } from '../../styles/shoelace-styles';\nimport { tableStyles } from '../../styles/table-styles';\n\ninterface Standing {\n  name: string;\n  wins: number;\n  losses: number;\n  draws: number;\n  points: number;\n  winPercentage?: number;\n}\n\n@customElement('standings-display')\nexport class StandingsDisplay extends LitElement {\n  @property({ type: Array }) standings: Standing[] = [];\n\n  static styles = [\n    sharedStyles,\n    shoelaceStyles,\n    tableStyles,\n    css`\n  `];\n\n  render() {\n    return html`\n      <table class=\"border table-striped\">\n        <thead>\n          <tr>\n            <th style=\"text-align: left;\">Player</th>\n            <th>Wins</th>\n            <th>Losses</th>\n            <th>Draws</th>\n            <th>Points</th>\n            <th class=\"hide-at-800\">Win Percentage</th>\n          </tr>\n        </thead>\n        <tbody>\n          ${this.standings.map(standing => html`\n            <tr>\n              <td>${standing.name}</td>\n              <td style=\"text-align: center;\">${standing.wins}</td>\n              <td style=\"text-align: center;\">${standing.losses}</td>\n              <td style=\"text-align: center;\">${standing.draws}</td>\n              <td style=\"text-align: center;\">${standing.points}</td>\n              <td class=\"hide-at-800\" style=\"text-align: center;\">${standing.winPercentage || 0}</td>\n            </tr>\n          `)}\n        </tbody>\n      </table>\n    `;\n  }\n}\n","import { LitElement, html } from 'lit';\nimport { state } from 'lit/decorators.js';\nimport { customElement, property } from 'lit/decorators.js';\n// import '@shoelace-style/shoelace/dist/components/select/select.js';\n// import '@shoelace-style/shoelace/dist/components/option/option.js';\n// import '@shoelace-style/shoelace/dist/components/dialog/dialog.js';\n// import '@shoelace-style/shoelace/dist/components/button/button.js';\n// import '@shoelace-style/shoelace/dist/components/radio-group/radio-group.js';\n// import '@shoelace-style/shoelace/dist/components/radio-button/radio-button.js';\n\ninterface Match {\n  player1: string;\n  player2: string;\n  result: 'win' | 'loss' | 'draw';\n  winner: string | \"draw\" | null;\n}\n\n@customElement('edit-modal')\nexport class EditModal extends LitElement {\n  @property({ type: Object }) match: Match | null = null;\n  @property({ type: Boolean }) isOpen: boolean = false;\n  @state() editedWinner: string | \"draw\" | null = 'draw'; // Track the winner directly\n\n  open(match: Match) {\n    this.match = match;\n    this.editedWinner = match.winner; // Initialize with the current winner\n    this.isOpen = true;\n  }\n\n  close() {\n    this.dispatchEvent(new CustomEvent('close'));\n    this.isOpen = false;\n  }\n\n  confirm() {\n    if (this.match) {\n      let result: 'win' | 'loss' | 'draw';\n        if (this.editedWinner === \"draw\") {\n          result = 'draw';\n        } else if (this.editedWinner === this.match.player1) {\n          result = 'win';\n        } else {\n          result = 'loss';\n        }\n      this.dispatchEvent(new CustomEvent('match-edited', {\n        detail: {\n          ...this.match,\n          result: result,\n          winner: this.editedWinner,\n        } }));\n      this.close();\n    }\n  }\n\n  handleWinnerChange(event: Event) {\n    const radioGroup = event.target as HTMLInputElement;\n    this.editedWinner = radioGroup.value === 'draw' ? 'draw' : radioGroup.value as string | null;\n  }\n\n  render() {\n    if (!this.isOpen || !this.match) {\n      return html``;\n    }\n\n    return html`\n      <sl-dialog\n        label=\"Edit Results\"\n        ?open=${this.isOpen}\n        @sl-after-close=${this.close}\n      >\n        <p style=\"text-align: center;\">\n          <strong>Matchup:</strong>\n          <br />\n          <span style=\"font-size: 2rem;\">${this.match.player1} vs ${this.match.player2}</span>\n\n        </p>\n        <div style=\"text-align: center;\">\n        <sl-radio-group\n          size=\"medium\"\n          label=\"Select a winner\"\n          name=\"winner\"\n          @sl-change=${this.handleWinnerChange}\n          value=\"${this.editedWinner}\"\n        >\n          <sl-radio-button\n            value=${this.match.player1}\n          >\n            ${this.match.player1}\n          </sl-radio-button>\n          <sl-radio-button\n            value=\"draw\"\n          >\n            Draw\n          </sl-radio-button>\n          <sl-radio-button\n            value=${this.match.player2}\n          >\n            ${this.match.player2}\n          </sl-radio-button>\n        </sl-radio-group>\n        </div>\n        <sl-button slot=\"footer\" variant=\"default\" outline @click=${this.close}>\n          Cancel\n        </sl-button>\n        <sl-button slot=\"footer\" variant=\"success\" @click=${this.confirm}>\n          Update\n        </sl-button>\n      </sl-dialog>\n      <style>\n        sl-dialog::part(header-actions) {\n          display: none;\n        }\n        .larger-icon::part(prefix) {\n          font-size: 1.125rem;\n        }\n      </style>\n    `;\n  }\n}\n","import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nimport { shoelaceStyles } from '../../styles/shoelace-styles';\n\ninterface Match {\n  player1: string;\n  player2: string;\n  result: 'win' | 'loss' | 'draw';\n  winner: string | \"draw\" | null;\n}\n\n@customElement('match-history')\nexport class MatchHistory extends LitElement {\n  @property({ type: Array }) matchHistory: Match[] = [];\n\n  static styles = [\n    shoelaceStyles\n  ]\n\n  editMatch(index: number) {\n    this.dispatchEvent(new CustomEvent('edit-match', { detail: index }));\n  }\n  getPlayerBadgeVariant(player: string, match: Match): string {\n    if (match.winner === \"draw\") {\n      return 'neutral';\n    } else if (match.winner === player) {\n      return 'success';\n    } else {\n      return 'danger';\n    }\n  }\n  getPlayerIconVariant(player: string, match: Match): string {\n      if (match.winner === \"draw\") {\n          return 'bookmarks';\n      } else if (match.winner === player) {\n          return 'trophy';\n      } else {\n          return 'emoji-frown';\n      }\n  }\n  getPlayerResultString(player: string, match: Match): string {\n    if (match.winner === \"draw\") {\n      return 'draw';\n    } else if (match.winner === player) {\n      return 'win';\n    } else {\n      return 'loss';\n    }\n  }\n\n  render() {\n\n    return html`\n      <sl-menu>\n        ${this.matchHistory.map(\n          (match, index) => html`\n            <sl-menu-item>\n              <sl-badge\n                pill\n                variant=\"${this.getPlayerBadgeVariant(\n                  match.player1,\n                  match\n                )}\"\n              >\n                <span>${this.getPlayerResultString(match.player1, match)}</span>\n              </sl-badge>\n                ${match.player1} vs ${match.player2}\n              <sl-badge\n                pill\n                variant=\"${this.getPlayerBadgeVariant(\n                  match.player2,\n                  match\n                )}\"\n              >\n                <span>${this.getPlayerResultString(match.player2, match)}</span>\n              </sl-badge>\n              <sl-button\n                slot=\"suffix\"\n                variant=\"default\"\n                outline\n                @click=${() => this.editMatch(index)}\n                >Edit</sl-button\n              >\n            </sl-menu-item>\n          `\n        )}\n      </sl-menu>\n    `;\n  }\n}\n","import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n// import '@shoelace-style/shoelace/dist/components/dialog/dialog.js';\n// import '@shoelace-style/shoelace/dist/components/button/button.js';\n\n@customElement('confirmation-modal')\nexport class ConfirmationModal extends LitElement {\n  @property({ type: Boolean }) isOpen: boolean = false;\n  @property({ type: String }) message: string = '';\n\n  open(message: string) {\n    this.message = message;\n    this.isOpen = true;\n  }\n\n  close() {\n    this.dispatchEvent(new CustomEvent('close'));\n    this.isOpen = false;\n  }\n\n  confirm() {\n    this.dispatchEvent(new CustomEvent('confirm'));\n    this.close();\n  }\n\n  render() {\n    if (!this.isOpen) {\n      return html``;\n    }\n\n    return html`\n      <sl-dialog\n        label=\"Clear All Data\"\n        ?open=${this.isOpen}\n        @sl-after-close=${this.close}\n      >\n        <p>${this.message}</p>\n        <sl-button slot=\"footer\" variant=\"danger\" @click=${this.confirm}>\n          Confirm\n        </sl-button>\n        <sl-button slot=\"footer\" variant=\"default\" @click=${this.close}>\n          Cancel\n        </sl-button>\n      </sl-dialog>\n    `;\n  }\n}\n","import { LitElement, html } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport './player-input.js';\nimport './match-input.js';\nimport './standings-display.js';\nimport '../edit-modal.js';\nimport './match-history.js';\nimport '../confirmation-modal.js';\nimport '@shoelace-style/shoelace/dist/components/tab/tab.js';\nimport '@shoelace-style/shoelace/dist/components/tab-group/tab-group.js';\nimport '@shoelace-style/shoelace/dist/components/tab-panel/tab-panel.js';\nimport '@shoelace-style/shoelace/dist/components/icon/icon.js';\nimport '@shoelace-style/shoelace/dist/components/details/details.js';\nimport '@shoelace-style/shoelace/dist/components/button/button.js';\nimport '@shoelace-style/shoelace/dist/components/button-group/button-group.js';\nimport '@shoelace-style/shoelace/dist/components/dropdown/dropdown.js';\nimport '@shoelace-style/shoelace/dist/components/menu/menu.js';\nimport '@shoelace-style/shoelace/dist/components/menu-item/menu-item.js';\nimport '@shoelace-style/shoelace/dist/components/tooltip/tooltip.js';\nimport '@shoelace-style/shoelace/dist/components/input/input.js';\nimport '@shoelace-style/shoelace/dist/components/tag/tag.js';\nimport '@shoelace-style/shoelace/dist/components/alert/alert.js';\nimport '@shoelace-style/shoelace/dist/components/card/card.js';\nimport '@shoelace-style/shoelace/dist/components/badge/badge.js';\nimport '@shoelace-style/shoelace/dist/components/spinner/spinner.js';\n\nimport { sharedStyles } from '../../styles/shared-styles';\nimport { shoelaceStyles } from '../../styles/shoelace-styles';\nimport { gameTrackerStyles } from './game-tracker-styles';\n\ninterface Match {\n  player1: string;\n  player2: string;\n  result: 'win' | 'loss' | 'draw';\n}\n\ninterface Standing {\n  name: string;\n  wins: number;\n  losses: number;\n  draws: number;\n  points: number;\n  winPercentage?: number; // Optional tiebreaker property\n}\n\n@customElement('standings-tracker')\nexport class StandingsTracker extends LitElement {\n\n  static styles = [\n    sharedStyles,\n    shoelaceStyles,\n    gameTrackerStyles\n  ]\n\n  @state() activeTab: string = 'standings'; // Initial active tab\n  @state() players: string[] = [];\n  @state() matchHistory: Match[] = JSON.parse(localStorage.getItem('matchHistory') || '[]');\n  @state() standings: Standing[] = [];\n  @state() isLoading: boolean = true;\n  @state() editModalOpen = false;\n  @state() editMatchIndex: number | null = null;\n  @state() confirmationModalOpen = false;\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.loadData();\n  }\n\n  async loadData() {\n    try {\n      const playersData = localStorage.getItem('players');\n      const matchHistoryData = localStorage.getItem('matchHistory');\n\n      this.players = playersData ? JSON.parse(playersData) : [];\n      this.matchHistory = matchHistoryData ? JSON.parse(matchHistoryData) : [];\n    } catch (error) {\n      console.error('Error loading data:', error);\n      this.players = [];\n      localStorage.setItem('players', JSON.stringify(this.players));\n    } finally {\n      this.isLoading = false;\n      this.calculateStandings();\n    }\n  }\n\n  addPlayer(playerName: string) {\n    this.players = [...this.players, playerName];\n    localStorage.setItem('players', JSON.stringify(this.players));\n    this.calculateStandings();\n    this.requestUpdate();\n  }\n\n  removePlayer(playerName: string) {\n    this.players = this.players.filter(p => p !== playerName);\n    localStorage.setItem('players', JSON.stringify(this.players));\n    this.calculateStandings();\n    this.requestUpdate();\n  }\n\n  clearAllPlayers() {\n    this.players = [];\n    localStorage.setItem('players', JSON.stringify(this.players));\n    this.calculateStandings();\n    this.requestUpdate();\n  }\n\n  recordMatch(match: Match) {\n    this.matchHistory = [...this.matchHistory, match];\n    localStorage.setItem('matchHistory', JSON.stringify(this.matchHistory));\n    this.calculateStandings();\n    this.requestUpdate();\n  }\n\n  calculateStandings() {\n    console.log('calculateStandings called');\n    const standingsMap = this.initializeStandings();\n    this.matchHistory.forEach(match => this.applyMatchResult(match, standingsMap));\n    this.finalizeStandings(standingsMap);\n    console.log('standings:', this.standings);\n  }\n\n  initializeStandings() {\n    const standingsMap = new Map<string, { wins: number; losses: number; draws: number; points: number, winPercentage: number }>();\n    this.players.forEach(player => {\n        standingsMap.set(player, {wins: 0, losses: 0, draws: 0, points: 0, winPercentage: 0})\n    });\n    return standingsMap;\n  }\n\n  applyMatchResult(match: Match, standingsMap: Map<string, { wins: number; losses: number; draws: number; points: number; winPercentage: number }>) {\n    const player1Stats = standingsMap.get(match.player1);\n    const player2Stats = standingsMap.get(match.player2);\n\n    if (player1Stats && player2Stats) {\n        if (match.result === 'win') {\n            player1Stats.wins++;\n            player1Stats.points += 3;\n            player2Stats.losses++;\n        } else if (match.result === 'loss') {\n            player2Stats.wins++;\n            player2Stats.points += 3;\n            player1Stats.losses++;\n        } else {\n            player1Stats.draws++;\n            player1Stats.points++;\n            player2Stats.draws++;\n            player2Stats.points++;\n        }\n    } else {\n        if(!player1Stats){\n            console.error(`Player not found in standings: ${match.player1}`);\n        }\n        if(!player2Stats){\n            console.error(`Player not found in standings: ${match.player2}`);\n        }\n    }\n  }\n\n  finalizeStandings(standingsMap: Map<string, { wins: number; losses: number; draws: number; points: number; winPercentage: number }>) {\n    // Calculate win percentages and update standingsMap\n    this.players.forEach(player => {\n        const stats = standingsMap.get(player)!;\n        const totalMatches = stats.wins + stats.losses + stats.draws;\n        stats.winPercentage = totalMatches > 0 ? (stats.wins / totalMatches) * 100 : 0;\n        stats.winPercentage = parseFloat(stats.winPercentage.toFixed(2)); // Round to 2 decimal places\n    });\n\n    // Create standings array from standingsMap\n    this.standings = Array.from(standingsMap.entries()).map(([name, stats]) => ({\n        name: name,\n        wins: stats.wins,\n        losses: stats.losses,\n        draws: stats.draws,\n        points: stats.points,\n        winPercentage: stats.winPercentage,\n    }));\n\n    // Sort by points, then win percentage\n    this.standings.sort((a, b) => {\n        if (b.points !== a.points) {\n            return b.points - a.points; // Sort by points first\n        } else {\n            return (b.winPercentage || 0) - (a.winPercentage || 0); // Sort by win percentage if points are equal\n        }\n    });\n  }\n\n  openEditModal(index: number) {\n    this.editMatchIndex = index;\n    this.editModalOpen = true;\n  }\n\n  editMatch(editedMatch: Match) {\n    if (this.editMatchIndex !== null) {\n      this.matchHistory = this.matchHistory.map((match, index) =>\n        index === this.editMatchIndex ? editedMatch : match\n      );\n      localStorage.setItem('matchHistory', JSON.stringify(this.matchHistory));\n      this.calculateStandings();\n      this.editMatchIndex = null;\n      this.editModalOpen = false;\n      this.requestUpdate();\n    }\n  }\n\n  exportMatchResults() {\n    const csv = this.matchHistory.map(match =>\n      `${match.player1},${match.player2},${match.result}`\n    ).join('\\n');\n    this.downloadCSV(csv, 'match-results.csv');\n  }\n\n  exportStandings() {\n    const csv = this.standings.map(standing =>\n      `${standing.name},${standing.wins},${standing.losses},${standing.draws},${standing.points},${standing.winPercentage || 0}`\n    ).join('\\n');\n    this.downloadCSV(csv, 'standings.csv');\n  }\n\n  downloadCSV(csv: string, filename: string) {\n    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', filename);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  clearMatchResultsConfirmed() {\n    this.matchHistory = [];\n    localStorage.setItem('matchHistory', JSON.stringify(this.matchHistory));\n    this.calculateStandings();\n    this.requestUpdate();\n  }\n\n  openConfirmationModal() {\n    this.confirmationModalOpen = true;\n  }\n\n  closeConfirmationModal() {\n    this.confirmationModalOpen = false;\n  }\n\n  clearStandingsConfirmed() {\n    this.standings = [];\n    // this.players = [];\n    localStorage.removeItem('matchHistory'); // Remove the old localStorage\n    // localStorage.removeItem('players'); // remove the old players data\n    this.requestUpdate();\n    this.closeConfirmationModal();\n  }\n\n  setActiveTab(tabName: string) {\n    this.activeTab = tabName;\n  }\n\n  render() {\n    if (this.isLoading) {\n      return html`\n        <p>Loading...</p>\n        <sl-spinner style=\"font-size: 3rem;\"></sl-spinner>\n      `; // Loading indicator\n    }\n\n    return html `\n      <div class=\"page-header\">\n        <h1>Tournament Tracker</h1>\n        <div class=\"button-group\" label=\"game-actions\">\n          <sl-button variant=\"success\" size=\"medium\" circle label=\"export standings\" @click=${this.exportStandings}>\n            <sl-icon library=\"default\" name=\"file-earmark-excel-fill\" label=\"Export Standings\"></sl-icon>\n          </sl-button>\n          <sl-button variant=\"warning\" size=\"medium\" circle label=\"action to clear standings\"  @click=${this.clearStandingsConfirmed}>\n            <sl-icon library=\"default\" name=\"trash-fill\" label=\"Clear Standings\"></sl-icon>\n          </sl-button>\n          <sl-button variant=\"danger\" size=\"medium\" circle label=\"launch a modal to confirm clearing of match data\" @click=${this.openConfirmationModal}>\n          <sl-icon library=\"default\" name=\"trash-fill\" label=\"Clear All Data\"></sl-icon>\n          </sl-button>\n        </div>\n      </div>\n      <div style=\"display: flex; flex-direction: column; grid-gap: 1rem;\">\n        <sl-details summary=\"Match Results\" open>\n          <match-input .players=${this.players.map(player => ({ name: player }))} @match-recorded=${(e: CustomEvent) => this.recordMatch(e.detail)}></match-input>\n        </sl-details>\n        <sl-tab-group active-tab=${this.activeTab}>\n          <sl-tab slot=\"nav\" panel=\"standings\" class=\"ios-tab\">Standings</sl-tab>\n          <sl-tab slot=\"nav\" panel=\"history\" class=\"ios-tab\">History</sl-tab>\n          <sl-tab slot=\"nav\" panel=\"players\" class=\"ios-tab\">Players</sl-tab>\n          <sl-tab-panel name=\"standings\">\n            <standings-display .standings=${this.standings}></standings-display>\n          </sl-tab-panel>\n          <sl-tab-panel name=\"history\">\n            <div slot=\"header\">\n              <div style=\"display: flex; flex-direction: row; justify-content: space-between; align-items: center; grid-gap: .5rem; width: 100%;\">\n                Match History\n                <sl-tooltip content=\"Export Results\">\n                  <sl-button variant=\"success\" size=\"small\" pill label=\"export match results\" @click=${this.exportMatchResults}>\n                    <sl-icon slot=\"prefix\" library=\"default\" name=\"file-earmark-excel-fill\" label=\"Export Results\"></sl-icon>\n                    Export <span class=\"hide-at-800\">Standings</span>\n                  </sl-button>\n                </sl-tooltip>\n              </div>\n            </div>\n            <match-history .matchHistory=${this.matchHistory} @edit-match=${(e: CustomEvent) => this.openEditModal(e.detail)}></match-history>\n          </sl-tab-panel>\n          <sl-tab-panel name=\"players\">\n            <player-input\n              @player-added=${(e: CustomEvent) => this.addPlayer(e.detail)}\n              @remove-player=${(e: CustomEvent) => this.removePlayer(e.detail)}\n              @clear-all-players=${() => this.clearAllPlayers()}\n              .players=${this.players}\n            ></player-input>\n          </sl-tab-panel>\n        </sl-tab-group>\n      </div>\n      <edit-modal .match=${this.editMatchIndex !== null ? this.matchHistory[this.editMatchIndex] : null} .isOpen=${this.editModalOpen} @match-edited=${(e: CustomEvent) => this.editMatch(e.detail)} @close=${() => this.editModalOpen = false}></edit-modal>\n      <confirmation-modal\n        .isOpen=${this.confirmationModalOpen}\n        message=\"Are you sure you want to clear the match data? Standings and History will be deleted. Players must be removed individually.\"\n        @confirm=${this.clearMatchResultsConfirmed}\n        @close=${this.closeConfirmationModal}\n      ></confirmation-modal>\n      <style>\n        sl-card {\n          width: 100%;\n        }\n        sl-menu-item {\n          background-color: var(--sl-color-neutral-50);\n        }\n      </style>\n    `;\n  }\n}\n","import { LitElement, css, html } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport '../components/game-tracker/standings-tracker'; // Import the component\nimport { sharedStyles } from '../styles/shared-styles';\n\n@customElement('app-standings')\nexport class AppDashboard extends LitElement {\n  static styles = [\n    sharedStyles,\n    css`\n    `\n  ]\n  render() {\n    return html`\n      <!-- <app-header ?enableBack=\"${true}\"></app-header> -->\n      <main style=\"margin: 0 .5rem\">\n        <standings-tracker></standings-tracker>\n      </main>\n      <app-navigation></app-navigation>\n      <style>\n        sl-button::part(prefix) sl-icon {\n          font-size: 1.125rem;\n        }\n      </style>\n    `;\n  }\n}\n"],"names":["PlayerInput","LitElement","event","inputElement","input","playerName","isValid","html","player","sharedStyles","shoelaceStyles","css","__decorateClass","property","state","customElement","gameTrackerStyles","MatchInput","result","select","radioGroup","player1Options","player2Options","playersSelected","playerOneValue","playerTwoValue","StandingsDisplay","standing","tableStyles","EditModal","match","MatchHistory","index","ConfirmationModal","message","StandingsTracker","playersData","matchHistoryData","error","p","standingsMap","player1Stats","player2Stats","stats","totalMatches","name","a","b","editedMatch","csv","filename","blob","url","link","tabName","AppDashboard"],"mappings":"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"}